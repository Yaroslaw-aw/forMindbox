// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductsCategoriesManyWithMany.Db;

#nullable disable

namespace ProductsCategoriesManyWithMany.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240403231918_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductsCategoriesManyWithMany.Db.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("CategoryId")
                        .HasName("catogory_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("ProductsCategoriesManyWithMany.Db.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProductName")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ProductId")
                        .HasName("product_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("ProductsCategoriesManyWithMany.Db.ProductCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ProductsCategoriesManyWithMany.Db.ProductCategory", b =>
                {
                    b.HasOne("ProductsCategoriesManyWithMany.Db.Category", "Category")
                        .WithMany("ProductCategoriys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductsCategoriesManyWithMany.Db.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductsCategoriesManyWithMany.Db.Category", b =>
                {
                    b.Navigation("ProductCategoriys");
                });

            modelBuilder.Entity("ProductsCategoriesManyWithMany.Db.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
